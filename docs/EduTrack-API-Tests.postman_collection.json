{
	"info": {
		"_postman_id": "edutrack-api-collection",
		"name": "EduTrack API Collection",
		"description": "Collection để test các API endpoints của EduTrack Backend",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:8080",
			"type": "string"
		}
	],
	"item": [
		{
			"name": "Health Check",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response has correct structure\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property('code');",
							"    pm.expect(jsonData).to.have.property('message');",
							"    pm.expect(jsonData).to.have.property('data');",
							"    pm.expect(jsonData.code).to.eql(0);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/health",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"health"
					]
				}
			}
		},
		{
			"name": "Get All Courses",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response has courses data\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.code).to.eql(0);",
							"    pm.expect(jsonData.data).to.be.an('array');",
							"    ",
							"    if (jsonData.data.length > 0) {",
							"        pm.expect(jsonData.data[0]).to.have.property('id');",
							"        pm.expect(jsonData.data[0]).to.have.property('title');",
							"        pm.expect(jsonData.data[0]).to.have.property('price');",
							"        pm.expect(jsonData.data[0]).to.have.property('category');",
							"        ",
							"        // Store first course ID for later use",
							"        pm.environment.set('course_id', jsonData.data[0].id);",
							"    }",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/api/v1/courses",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v1",
						"courses"
					]
				}
			}
		},
		{
			"name": "Get Course by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response has course data\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.code).to.eql(0);",
							"    pm.expect(jsonData.data).to.have.property('id');",
							"    pm.expect(jsonData.data).to.have.property('title');",
							"    pm.expect(jsonData.data).to.have.property('price');",
							"    pm.expect(jsonData.data).to.have.property('description');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/api/v1/courses/{{course_id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v1",
						"courses",
						"{{course_id}}"
					]
				}
			}
		},
		{
			"name": "Create Lead - Success",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"Lead created successfully\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.code).to.eql(0);",
							"    pm.expect(jsonData.data).to.have.property('id');",
							"    pm.expect(jsonData.data).to.have.property('email');",
							"    pm.expect(jsonData.data).to.have.property('name');",
							"    pm.expect(jsonData.data).to.have.property('phone');",
							"    ",
							"    // Store lead ID for later use",
							"    pm.environment.set('lead_id', jsonData.data.id);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"John Doe\",\n    \"email\": \"john.doe@example.com\",\n    \"phone\": \"+84901234567\",\n    \"interest\": \"English\"\n}"
				},
				"url": {
					"raw": "{{base_url}}/api/v1/leads",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v1",
						"leads"
					]
				}
			}
		},
		{
			"name": "Create Lead - Duplicate Email",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 409 (Conflict)\", function () {",
							"    pm.response.to.have.status(409);",
							"});",
							"",
							"pm.test(\"Error response for duplicate email\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.code).to.eql(1409);",
							"    pm.expect(jsonData.message).to.contain('already exists');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Jane Doe\",\n    \"email\": \"john.doe@example.com\",\n    \"phone\": \"+84987654321\",\n    \"interest\": \"Math\"\n}"
				},
				"url": {
					"raw": "{{base_url}}/api/v1/leads",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v1",
						"leads"
					]
				}
			}
		},
		{
			"name": "Create Lead - Validation Error",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400 (Bad Request)\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"Validation error response\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.code).to.eql(1001);",
							"    pm.expect(jsonData.message).to.eql('Validation error');",
							"    pm.expect(jsonData.data).to.be.an('object');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"\",\n    \"email\": \"invalid-email\",\n    \"phone\": \"\"\n}"
				},
				"url": {
					"raw": "{{base_url}}/api/v1/leads",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v1",
						"leads"
					]
				}
			}
		},
		{
			"name": "Create Order - Success",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"Order created successfully\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.code).to.eql(0);",
							"    pm.expect(jsonData.data).to.have.property('id');",
							"    pm.expect(jsonData.data).to.have.property('amount');",
							"    pm.expect(jsonData.data).to.have.property('status');",
							"    pm.expect(jsonData.data.status).to.eql('PAID');",
							"    ",
							"    // Store order ID for later use",
							"    pm.environment.set('order_id', jsonData.data.id);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"courseId\": {{course_id}},\n    \"leadId\": {{lead_id}},\n    \"amount\": 299000\n}"
				},
				"url": {
					"raw": "{{base_url}}/api/v1/orders",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v1",
						"orders"
					]
				}
			}
		},
		{
			"name": "Create Order - Guest Checkout",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"Guest order created successfully\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.code).to.eql(0);",
							"    pm.expect(jsonData.data).to.have.property('id');",
							"    pm.expect(jsonData.data).to.have.property('amount');",
							"    pm.expect(jsonData.data).to.have.property('status');",
							"    pm.expect(jsonData.data.status).to.eql('PAID');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"courseId\": {{course_id}},\n    \"amount\": 399000,\n    \"guestName\": \"Guest User\",\n    \"guestEmail\": \"guest@example.com\",\n    \"guestPhone\": \"+84123456789\"\n}"
				},
				"url": {
					"raw": "{{base_url}}/api/v1/orders",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v1",
						"orders"
					]
				}
			}
		},
		{
			"name": "Track Event - Success",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"Traffic event tracked successfully\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.code).to.eql(0);",
							"    pm.expect(jsonData.data).to.have.property('id');",
							"    pm.expect(jsonData.data).to.have.property('path');",
							"    pm.expect(jsonData.data).to.have.property('sessionId');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "User-Agent",
						"value": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"sessionId\": \"sess_{{$randomUUID}}\",\n    \"path\": \"/courses/english\",\n    \"referrer\": \"https://google.com/search?q=english+course\",\n    \"userAgent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36\"\n}"
				},
				"url": {
					"raw": "{{base_url}}/api/v1/track",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v1",
						"track"
					]
				}
			}
		},
		{
			"name": "Multiple Track Events",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// This will run multiple tracking events",
							"// to generate data for dashboard testing"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"sessionId\": \"sess_{{$randomUUID}}\",\n    \"path\": \"/\",\n    \"referrer\": \"https://facebook.com\",\n    \"userAgent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36\"\n}"
				},
				"url": {
					"raw": "{{base_url}}/api/v1/track",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v1",
						"track"
					]
				}
			}
		},
		{
			"name": "Get Dashboard - Default Range",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Dashboard data structure is correct\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.code).to.eql(0);",
							"    ",
							"    var data = jsonData.data;",
							"    pm.expect(data).to.have.property('traffic');",
							"    pm.expect(data).to.have.property('leads');",
							"    pm.expect(data).to.have.property('orders');",
							"    pm.expect(data).to.have.property('revenue');",
							"    pm.expect(data).to.have.property('conversionLead');",
							"    pm.expect(data).to.have.property('conversionRevenue');",
							"    pm.expect(data).to.have.property('range');",
							"    ",
							"    // Check data types",
							"    pm.expect(data.traffic).to.be.a('number');",
							"    pm.expect(data.leads).to.be.a('number');",
							"    pm.expect(data.orders).to.be.a('number');",
							"    pm.expect(data.revenue).to.be.a('number');",
							"    pm.expect(data.conversionLead).to.be.a('number');",
							"    pm.expect(data.conversionRevenue).to.be.a('number');",
							"    ",
							"    console.log('Dashboard Data:', JSON.stringify(data, null, 2));",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/api/v1/admin/dashboard",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v1",
						"admin",
						"dashboard"
					]
				}
			}
		},
		{
			"name": "Get Dashboard - Custom Range",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Dashboard data with custom range\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.code).to.eql(0);",
							"    pm.expect(jsonData.data.range).to.contain('2025-08-25');",
							"    ",
							"    console.log('Custom Range Dashboard:', JSON.stringify(jsonData.data, null, 2));",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/api/v1/admin/dashboard?from=2025-08-25&to=2025-08-30",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v1",
						"admin",
						"dashboard"
					],
					"query": [
						{
							"key": "from",
							"value": "2025-08-25"
						},
						{
							"key": "to",
							"value": "2025-08-30"
						}
					]
				}
			}
		},
		{
			"name": "Swagger API Docs",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/api-docs",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api-docs"
					]
				}
			}
		}
	]
}
